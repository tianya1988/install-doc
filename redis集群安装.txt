redis集群安装

root操作
firewall-cmd --zone=public --add-port=26379/tcp --permanent
firewall-cmd --zone=public --add-port=6379/tcp --permanent
firewall-cmd --reload 
firewall-cmd --zone=public --list-ports

创建操作系统用户(root)

groupadd redis && useradd -g redis redis
passwd redis   ###（根据环境自定义密码）


mkdir -p /opt/redis
chown -R redis:redis /opt/redis

修改系统参数：
vi /etc/sysctl.conf

添加一行：
vm.overcommit_memory = 1

使系统参数生效
sysctl -p

-----------

临时方法：
echo never > /sys/kernel/mm/transparent_hugepage/enabled 
永久方法：
将上面一条命令写入rc.local文件
vi /etc/rc.d/rc.local
echo never > /sys/kernel/mm/transparent_hugepage/enabled

chmod 777 /etc/rc.d/rc.local

备注：必须用root用户执行 没有权限
-----------

切换到redis用户

# su - redis
cd /opt/redis

mkdir -p /opt/redis/data && mkdir -p /opt/redis/app

mkdir -p /opt/redis/data/redis1/ && mkdir -p /opt/redis/data/redis  &&  mkdir -p /opt/redis/data/sentinel

cd /opt/redis/app
上传安装包至当前目录
tar -xvf redis-5.0.10.tar.gz
cd /opt/redis/app/redis-5.0.10/
make  (使用当前Makefile编译文件)
make test

使用示例配置文件生成：
cat  /opt/redis/app/redis-5.0.10/redis.conf | grep -v "#" |grep -v "^$" > /opt/redis/app/redis-5.0.10/redis1.conf（备注：此步骤可删除）

cd /opt/redis/data/redis

vim /opt/redis/data/redis/redis.conf
！！！！！！注意 slave节点需要把备注的部分放开 ！！！！！！！
##############Master################  修改bind
bind 192.168.160.5
protected-mode yes
port 6379
requirepass 123456
masterauth 123456
maxmemory 2GB
tcp-backlog 511
timeout 0
tcp-keepalive 300
daemonize no
supervised no
pidfile /var/run/redis_1.pid
loglevel notice
logfile "/opt/redis/data/redis1/redis.log"
databases 16
always-show-logo yes
save 10 1
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /opt/redis/data/redis1/ 
# 修改以下两个参数作为slave节点(备注：158, 159注释去掉 改成master节点的IP )           
# replicaof 12.0.217.157 6379
# masterauth 123456
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-disable-tcp-nodelay no
replica-priority 100
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no
appendonly yes                
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes
lua-time-limit 5000
slowlog-log-slower-than 10000
slowlog-max-len 128
latency-monitor-threshold 0
notify-keyspace-events ""
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
dynamic-hz yes
aof-rewrite-incremental-fsync yes
rdb-save-incremental-fsync yes


Salve： 修改bind和replicaof
#bind 12.0.217.157
bind 192.168.160.78
protected-mode yes
port 6379
requirepass 123456
masterauth 123456
maxmemory 2GB
tcp-backlog 511
timeout 0
tcp-keepalive 300
daemonize no
supervised no
pidfile /var/run/redis_1.pid        
loglevel notice
logfile "/opt/redis/data/redis1/redis.log"    
databases 16
always-show-logo yes
save 10 1
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /opt/redis/data/redis1/ 
# 修改以下两个参数作为slave节点(备注：158, 159注释去掉 改成master节点的IP ) 
replicaof 192.168.160.5 6379
masterauth 123456
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-disable-tcp-nodelay no
replica-priority 100
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no
appendonly yes 
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes
lua-time-limit 5000
slowlog-log-slower-than 10000
slowlog-max-len 128
latency-monitor-threshold 0
notify-keyspace-events ""
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
dynamic-hz yes
aof-rewrite-incremental-fsync yes
rdb-save-incremental-fsync yes

非root启动redis:
/opt/redis/app/redis-5.0.10/src/redis-server /opt/redis/data/redis/redis.conf &


三个节点都需要修改sentinel.conf
vi /opt/redis/data/sentinel/sentinel.conf
sentinel.conf内容：
#########################################
port 26379
daemonize no
protected-mode no
pidfile /var/run/redis-sentinel.pid
logfile "/opt/redis/data/sentinel/sentinel.log"
dir /opt/redis/data/sentinel/
sentinel monitor jxrtMaster 192.168.161.6 6379 2
sentinel auth-pass jxrtMaster 123456
sentinel down-after-milliseconds jxrtMaster 30000
sentinel parallel-syncs jxrtMaster 1
sentinel failover-timeout jxrtMaster 180000
sentinel deny-scripts-reconfig yes
########################################

非root启动sentinel:
/opt/redis/app/redis-5.0.10/src/redis-server /opt/redis/data/sentinel/sentinel.conf --sentinel &

##问题: 集群一开始没起来 需要把redis.conf和sentinel.conf全部改成主节点的

连接到主节点  能看到两个从节点
/opt/redis/app/redis-5.0.10/src/redis-cli -h 192.168.161.6 -p 6379
auth 123456
info replication
